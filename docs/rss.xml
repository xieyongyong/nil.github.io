<?xml version='1.0' encoding='UTF-8'?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/" version="2.0"><channel><title>Nil's  Blog</title><link>https://xieyongyong.github.io</link><description>成王败寇。</description><copyright>Nil's  Blog</copyright><docs>http://www.rssboard.org/rss-specification</docs><generator>python-feedgen</generator><image><url>https://i.postimg.cc/PxSjvT60/Dest-Crop-Image.png</url><title>avatar</title><link>https://xieyongyong.github.io</link></image><lastBuildDate>Tue, 28 May 2024 16:15:27 +0000</lastBuildDate><managingEditor>Nil's  Blog</managingEditor><ttl>60</ttl><webMaster>Nil's  Blog</webMaster><item><title>Windows安装MySQL流程速记(解压版)</title><link>https://xieyongyong.github.io/post/Windows-an-zhuang-MySQL-liu-cheng-su-ji-%28-jie-ya-ban-%29.html</link><description>### _前言_&#13;
这里用的是MySQL5.7 windows的zip版本。</description><guid isPermaLink="true">https://xieyongyong.github.io/post/Windows-an-zhuang-MySQL-liu-cheng-su-ji-%28-jie-ya-ban-%29.html</guid><pubDate>Fri, 05 Apr 2024 16:09:53 +0000</pubDate></item><item><title>更改Windows用户下中文名</title><link>https://xieyongyong.github.io/post/geng-gai-Windows-yong-hu-xia-zhong-wen-ming.html</link><description>首先声明，Windows系统如果用中文名作为路径的话，会导致很多不必要的麻烦（例如某些软件运行时会因为中文转码后找不到路径），因此，用户名最好使用英文，即C:\Users下的文件夹名，例如下图为admin&#13;
&#13;
![image](https://github.com/xieyongyong/xieyongyong.github.io/assets/55351400/2a84ba03-52e2-4e53-bb02-19bdafe6f450)&#13;
**那么如果我们已经用了很长时间了，但是又不想重装系统该怎么办呢？**&#13;
&#13;
接下来进入正题（干货！）：&#13;
&#13;
1. 以管理员身份打开cmd（桌面左下角搜索框搜索cmd，选择以管理员身份打开，一定要用管理员身份！）， 然后输入引号内代码“net user administrator /active:yes”，回车，这时候会发现它提示成功，我们已经可以登录管理员（administrator）账号了。</description><guid isPermaLink="true">https://xieyongyong.github.io/post/geng-gai-Windows-yong-hu-xia-zhong-wen-ming.html</guid><pubDate>Sat, 30 Mar 2024 15:45:38 +0000</pubDate></item><item><title>关于JAVA分割字符串split的使用方法</title><link>https://xieyongyong.github.io/post/guan-yu-JAVA-fen-ge-zi-fu-chuan-split-de-shi-yong-fang-fa.html</link><description>**String.split()** 方法的默认行为是丢弃尾部的空字符串&#13;
例如：&#13;
```&#13;
String str = '1+2+3+4';&#13;
String[] parts = str.split('\\+');&#13;
//得到的结果为 ['1', '2', '3', '4']&#13;
&#13;
String str = '+1+2+3+4';&#13;
String[] parts = str.split('\\+');&#13;
//得到的结果为 ['','1', '2', '3', '4']&#13;
&#13;
String str = '1+2+3+4+';&#13;
String[] parts = str.split('\\+');&#13;
//得到的结果也为 ['1', '2', '3', '4']&#13;
```&#13;
&#13;
针对第三个demo，可以看到末尾的空字符串被去除了，但是，如果我们传入的字符串为 `1+2+3+4+`，同时又想数组中包含末尾的空字符串呢？&#13;
&#13;
这就要引出`String.split()`的第二个参数了:&#13;
```&#13;
String str = '+1+2+3+4';&#13;
String[] parts = str.split('\\+', -1);&#13;
//这次我们得到的结果就是 ['1', '2', '3', '4','']&#13;
```&#13;
&#13;
&gt; 关于第二个参数，它控制着正则表达式匹配的次数，即分割的次数:&#13;
&gt; &#13;
&gt; - 如果第二个参数是非正数（小于或等于0），那么正则表达式将尽可能多地匹配，直到字符串的末尾。</description><guid isPermaLink="true">https://xieyongyong.github.io/post/guan-yu-JAVA-fen-ge-zi-fu-chuan-split-de-shi-yong-fang-fa.html</guid><pubDate>Thu, 14 Mar 2024 09:09:20 +0000</pubDate></item><item><title>扬帆，起航！</title><link>https://xieyongyong.github.io/post/yang-fan-%EF%BC%8C-qi-hang-%EF%BC%81.html</link><description>**_于此记录Nil的第一篇博客！_**。</description><guid isPermaLink="true">https://xieyongyong.github.io/post/yang-fan-%EF%BC%8C-qi-hang-%EF%BC%81.html</guid><pubDate>Wed, 06 Mar 2024 08:09:54 +0000</pubDate></item></channel></rss>